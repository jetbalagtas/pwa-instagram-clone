const dbPromise=idb.open("posts-store",1,function(e){e.objectStoreNames.contains("posts")||e.createObjectStore("posts",{keyPath:"id"}),e.objectStoreNames.contains("sync-posts")||e.createObjectStore("sync-posts",{keyPath:"id"})}),writeData=(e,t)=>dbPromise.then(r=>{const o=r.transaction(e,"readwrite");return o.objectStore(e).put(t),o.complete}),readAllData=e=>dbPromise.then(t=>{return t.transaction(e,"readonly").objectStore(e).getAll()}),clearAllData=e=>dbPromise.then(t=>{const r=t.transaction(e,"readwrite");return r.objectStore(e).clear(),r.complete}),deleteItemFromData=(e,t)=>{dbPromise.then(r=>{const o=r.transaction(e,"readwrite");return o.objectStore(e).delete(t),o.complete}).then(()=>{console.log("Item deleted.")})},urlBase64ToUint8Array=e=>{for(var t=(e+"=".repeat((4-e.length%4)%4)).replace(/\-/g,"+").replace(/_/g,"/"),r=window.atob(t),o=new Uint8Array(r.length),a=0;a<r.length;++a)o[a]=r.charCodeAt(a);return o},dataURItoBlob=e=>{for(var t=atob(e.split(",")[1]),r=e.split(",")[0].split(":")[1].split(";")[0],o=new ArrayBuffer(t.length),a=new Uint8Array(o),n=0;n<t.length;n++)a[n]=t.charCodeAt(n);return new Blob([o],{type:r})};